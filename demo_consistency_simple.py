#!/usr/bin/env python3\n\"\"\"\n一致性检查器简化演示\n\"\"\"\nimport asyncio\nfrom agents.consistency_checker import (\n    ConsistencyChecker, ConsistencyCheckRequest\n)\n\nasync def main():\n    print(\"一致性检查器演示\")\n    print(\"=\"*40)\n    \n    # 创建检查器\n    checker = ConsistencyChecker(\"demo\")\n    \n    # 创建测试数据（包含不一致翻译）\n    episodes = [\n        {\n            \"episode_id\": \"episode_1\",\n            \"subtitles\": [\n                {\"text\": \"欢迎收看，我是主持人张伟。\"},\n                {\"text\": \"今天我们邀请到了海军司令李明将军。\"}\n            ],\n            \"translations\": {\n                \"en\": [\n                    {\"translated_text\": \"Welcome, I'm host Zhang Wei.\"},\n                    {\"translated_text\": \"Today we invited Navy Commander Li Ming.\"}\n                ]\n            }\n        },\n        {\n            \"episode_id\": \"episode_2\", \n            \"subtitles\": [\n                {\"text\": \"张伟继续主持节目。\"},\n                {\"text\": \"李明将军谈论海军战略。\"}\n            ],\n            \"translations\": {\n                \"en\": [\n                    {\"translated_text\": \"Zhang Wei continues hosting.\"},\n                    {\"translated_text\": \"General Li Ming discusses naval strategy.\"}  # 不一致：之前是Commander\n                ]\n            }\n        }\n    ]\n    \n    # 创建检查请求\n    request = ConsistencyCheckRequest(\n        request_id=\"demo_001\",\n        project_id=\"love_navy_blue\",\n        episodes=episodes,\n        target_languages=[\"en\"]\n    )\n    \n    # 执行检查\n    result = await checker.check_consistency(request)\n    \n    # 显示结果\n    print(f\"\\\\n检查结果:\")\n    print(f\"  成功: {result.success}\")\n    print(f\"  一致性评分: {result.consistency_score:.2%}\")\n    print(f\"  检查术语总数: {result.total_terms_checked}\")\n    print(f\"  发现违规: {len(result.violations_found)}\")\n    \n    # 显示违规详情\n    if result.violations_found:\n        print(f\"\\\\n违规详情:\")\n        for violation in result.violations_found:\n            print(f\"  术语: {violation.source_term}\")\n            print(f\"  类型: {violation.consistency_type.value}\")\n            print(f\"  冲突翻译:\")\n            for translation, occurrences in violation.conflicting_translations.items():\n                print(f\"    '{translation}': {len(occurrences)} 次\")\n    \n    print(f\"\\\\n演示完成！\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())"